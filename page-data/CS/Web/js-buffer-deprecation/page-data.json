{"componentChunkName":"component---src-templates-blog-post-js","path":"/CS/Web/js-buffer-deprecation/","result":{"data":{"allMarkdownRemark":{"totalCount":58},"markdownRemark":{"id":"01d95e23-c855-5b3a-ab8b-4d6ba7bb26df","html":"<h2>요약 : javascript string을 두번 디코딩하지 말자.</h2>\n<br>\n<p>다음과 같은 warning이 발생하며 디코딩이 작동하지 않는다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"bash\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">Iconv-lite warning: </span><span class=\"mtk6\">decode</span><span class=\"mtk1\">()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding</span></span></span></code></pre>\n<p>상황은 axios와 iconv로 스크레이핑을 하는 다음 코드에서 발생했다. <code>response</code> 버퍼에 저장된 값을 불러와 <code>EUC-KR</code>로 디코딩을 시도했다.</p>\n<ul>\n<li>Node.js v18.16.0</li>\n</ul>\n<pre class=\"grvsc-container abyss\" data-language=\"js\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 웹 페이지에 GET 요청 보내기</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">const</span><span class=\"mtk1\"> response </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">await</span><span class=\"mtk1\"> axios.</span><span class=\"mtk6\">get</span><span class=\"mtk1\">(newsUrl);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Cheerio를 사용하여 HTML 파싱</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">const</span><span class=\"mtk1\"> html </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> iconv.</span><span class=\"mtk6\">decode</span><span class=\"mtk1\">(response.data, </span><span class=\"mtk11\">&#39;EUC-KR&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">const</span><span class=\"mtk1\"> $ </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> cheerio.</span><span class=\"mtk6\">load</span><span class=\"mtk1\">(html);</span></span></span></code></pre>\n<br>\n<h3>원인은 이중 디코딩</h3>\n<p>로그에서 주어진 링크로 들어가면 deprecation 원인이 설명되어 있다. 이미 저장된 string을 불러와 디코딩하는 경우, 처음 string 저장을 할 때 이미 JavaScript에서 <code>utf-8</code>으로 디코딩을 <strong>자동</strong>으로 진행하기 때문에 <code>iconv.decode()</code>가 호출되면 이중으로 디코딩을 요청하게 된다. 이때 이중 디코딩은 잘못된 디코딩 결과를 내기도 하며, <code>utf-8</code> 디코딩은 정보를 손실하기 때문에 정확한 디코딩이 이루어질 수 없다. 즉 이 warning을 무시할 수 있지만, 대부분의 경우 의도한 디코딩 효과를 얻을 수 없으므로 해결하는 것이 좋다.</p>\n<br>\n<h3>해결방법은 <code>Buffer.from()</code>, <code>Buffer.concat()</code>, <code>Buffer.allocUnsafe()</code> 를 활용하는 것이다.</h3>\n<h3>즉, raw data를 가져와 디코딩을 진행하자.</h3>\n<p><code>Buffer.from()</code>은 변수가 저장된 버퍼에 접근하여 디코딩 되지 않은 Node.js의 binary 데이터에 접근할 수 있게 한다.</p>\n<ul>\n<li>이때 <code>Buffer()</code>는 보안 이슈로 인해 역시 deprecated 되었으므로 위의 세 함수를 활용하자.</li>\n</ul>\n<p>수정한 코드는 다음과 같으며 warning을 제거할 수 있었다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"js\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// 웹 페이지에 GET 요청 보내기</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">const</span><span class=\"mtk1\"> response </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">await</span><span class=\"mtk1\"> axios.</span><span class=\"mtk6\">get</span><span class=\"mtk1\">(newsUrl);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">// Cheerio를 사용하여 HTML 파싱</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">const</span><span class=\"mtk1\"> html </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> iconv.</span><span class=\"mtk6\">decode</span><span class=\"mtk1\">(</span><span class=\"mtk15 mtki\">Buffer</span><span class=\"mtk1\">.</span><span class=\"mtk6\">from</span><span class=\"mtk1\">(response.data), </span><span class=\"mtk11\">&#39;EUC-KR&#39;</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">const</span><span class=\"mtk1\"> $ </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> cheerio.</span><span class=\"mtk6\">load</span><span class=\"mtk1\">(html);</span></span></span></code></pre>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .abyss { background-color: #000c18; }\n  .abyss .mtki { font-style: italic; }\n  .abyss .mtk1 { color: #6688CC; }\n  .abyss .mtk6 { color: #DDBB88; }\n  .abyss .mtk3 { color: #384887; }\n  .abyss .mtk15 { color: #9966B8; }\n  .abyss .mtk7 { color: #225588; }\n  .abyss .mtk11 { color: #22AA44; }\n  .abyss .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","frontmatter":{"title":"[JS] decode()-ing 및 Buffer() deprecation","date":"May 21, 2023"}}},"pageContext":{"slug":"/CS/Web/js-buffer-deprecation/","previous":{"fields":{"slug":"/+ Project/gatsby-blog/"},"frontmatter":{"title":"[Ongoing] Gatsby 블로그 개발"}},"next":{"fields":{"slug":"/CS/Web/gatsby-plugin-katex/"},"frontmatter":{"title":"[Gatsby] Gatsby Plugin Katex 설치"}}}},"staticQueryHashes":["1185972000","3231742164"],"slicesMap":{}}