{"componentChunkName":"component---src-templates-blog-post-js","path":"/CS/Python/2022-11-01-python-list/","result":{"data":{"allMarkdownRemark":{"totalCount":45},"markdownRemark":{"id":"50c19682-c7c6-5fe2-92bd-a243acf0bed2","html":"<p>Python의 내장 시퀀스 데이터 타입인 리스트에 대해 알아본다.</p>\n<br>\n<br>\n<h2>리스트</h2>\n<p>파이썬 리스트는 동적 배열(array)로, 연결 리스트(linked list)와는 관련이 없다. 리스트는 항목을 쉼표 <code>,</code>로 구분하고, 대괄호 <code>[]</code>로 감싼다. 리스트의 항목은 서로 다른 데이터 타입일 수 있으며, 인덱스로 특정 요소에 접근하여 항목 값을 변경할 수 있다(가변 타입).</p>\n<br>\n<br>\n<h2>리스트 메서드</h2>\n<h3>append()</h3>\n<p><code>A.append(x)</code>는 리스트 A의 오른쪽에 항목 x를 추가한다. 시간복잡도는 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span>이다. <code>A[len(A):] = [x]</code>로\n같은 기능을 구현할 수 있다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; books = [&#39;금각사&#39;, &#39;수레 바퀴 아래서&#39;]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; books.append(&#39;배를 엮다&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; books</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">[&#39;금각사&#39;, &#39;수레 바퀴 아래서&#39;, &#39;배를 엮다&#39;]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; books[len(books):] = [&#39;아내를 모자로 착각한 남자&#39;]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; books</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">[&#39;금각사&#39;, &#39;수레 바퀴 아래서&#39;, &#39;배를 엮다&#39;, &#39;아내를 모자로 착각한 남자&#39;]</span></span></code></pre>\n<br>\n<h3>extend()</h3>\n<p><code>A.extend(B)</code>는 iterable 타입인 B를 리스트 A에 추가한다. <code>A[len(A):] = B</code> 또는 <code>A += B</code>로\n같은 기능을 구현할 수 있다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; books = [&#39;금각사&#39;]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; books.extend([&#39;봄눈&#39;])</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; books</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">[&#39;금각사&#39;, &#39;봄눈&#39;]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; books.extend(&quot;아무거나&quot;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; books</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">[&#39;금각사&#39;, &#39;봄눈&#39;, &#39;아&#39;, &#39;무&#39;, &#39;거&#39;, &#39;나&#39;]</span></span></code></pre>\n<br>\n<h3>insert()</h3>\n<p><code>A.insert(i, x)</code>는 리스트 A의 인덱스 위치 i에 항목 x를 삽입한다. 시간복잡도는 리스트 A의 길이 n에 대해 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span>이다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; books = [&#39;금각사&#39;, &#39;수레 바퀴 아래서&#39;]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; books.insert(1, &#39;데미안&#39;)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; books</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">[&#39;금각사&#39;, &#39;데미안&#39;, 수레 바퀴 아래서&#39;]</span></span></code></pre>\n<br>\n<h3>remove()</h3>\n<p><code>A.remove(x)</code>는 리스트 A에서 항목 x를 찾은 뒤 제거한다. 항목 x가 존재하지 않으면 ValueError를 발생시킨다. 항목 탐색 과정에 의해 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span> 시간이 소요된다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; int_range = list(range(5, 92))</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; int_range.remove(88)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; int_range</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">[5, 6, ..., 87, 89, .., 91]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; int_range.remove(99)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Traceback (most recent call last):</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">ValueError: list.remove(x): x not in list</span></span></code></pre>\n<br>\n<h3>pop()</h3>\n<p><code>A.pop(i)</code>는 리스트 A에서 인덱스 i에 있는 항목을 제거하고 그 항목을 반환한다. i를 지정하지 않으면 리스트의 맨 오른쪽\n항목을 제거하고 반환한다. i가 지정되지 않은 경우는 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span> 시간이, i가 지정된 경우 최대 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span> 시간이 소요된다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; int_range = list(range(5, 92))</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; int_range.pop()</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">91</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; int_range.pop(33)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">38</span></span></code></pre>\n<br>\n<h3>del문</h3>\n<p>del문은 리스트 인덱스를 지정하거나 인덱스 슬라이싱을 통해 주어진 범위의 항목들을 삭제한다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; numbers = list(range(10))</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; del numbers[5]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; numbers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">[0, 1, 2, 3, 4, 6, 7, 8, 9]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; del numbers[4:6]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; numbers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">[0, 1, 2, 3, 7, 8, 9]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; del numbers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; numbers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Traceback (most recent call last):</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">NameError: name &#39;numbers&#39; is not defined</span></span></code></pre>\n<p>마지막 사례처럼 객체 참조가 삭제 되었을 때 그 데이터 항목은 파이썬의 garbage collector에 수집된다.</p>\n<br>\n<h3>index()</h3>\n<p><code>A.index(x)</code>는 리스트 A에서 항목 x를 찾아 그 항목의 인덱스를 반환한다. 리스트 탐색 과정으로 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span> 시간이 소요된다.\nremove()와 마찬가지로 항목 x가 리스트에 없으면 ValueError를 일으킨다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; numbers = list(range(22, 33)) + list(range(67, 89))</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; numbers.index(77)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">21</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; numbers.index(55)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Traceback (most recent call last):</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">ValueError: 55 is not in list</span></span></code></pre>\n<br>\n<h3>count()</h3>\n<p><code>A.count(x)</code>는 리스트 A에 항목 x가 들어있는 개수를 반환한다. 리스트 전체를 탐색하므로 시간복잡도는 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span>이다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; numbers = [0] * 55 + [1] * 22</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; numbers.count(1)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">22</span></span></code></pre>\n<br>\n<h3>sort()</h3>\n<p><code>A.sort(key, reverse)</code>는 리스트 A를 정령하여 변수에 in place로 적용한다. 인수 key는 함수를 전달해야하며,\n리스트 항목을 내림차순으로 정렬할 때는 <code>sort(reverse=True)</code> 형식으로 지정한다. 시간복잡도는 내부에서 Timsort로\n구현되어 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(nlogn)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span>이다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; import random</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; numbers = list(range(10))</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; random.shuffle(numbers)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; numbers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">[7, 2, 4, 5, 3, 0, 8, 1, 6, 9]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; numbers.sort()</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; numbers</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span></code></pre>\n<br>\n<h3>reverse()</h3>\n<p><code>A.reverse()</code> 메서드는 리스트 A의 항목 순서를 반전해 변수에 in place로 적용한다. 시간복잡도는 전체 탐색으로 인해\n<span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span>이다. <code>A[::-1]</code>과 같은 구현을 한다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; numbers = list(range(10))</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; numbers.reverse()</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">[9, 8, 7, 6, 5, 4, 3, 2, 1, 0]</span></span></code></pre>\n<br>\n<br>\n<h2>리스트 언패킹</h2>\n<p>리스트 언패킹은 튜플 언패킹과 유사하다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; first, *rest = [1, 2, 3, 4, 5]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; first</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">1</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; rest</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">[2, 3, 4, 5]</span></span></code></pre>\n<p>리스트에 starred argument <code>*</code>를 붙여 함수의 인수로 전달할 수도 있다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; fn = lambda x, y, z: x * y * z</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; numbers = [11, 22, 33]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; fn(*numbers)</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">7986</span></span></code></pre>\n<br>\n<br>\n<h2>리스트 컴프리헨션</h2>\n<p>List comprehension은 반복문의 표현식으로 다음과 같은 형식이 있다.</p>\n<ul>\n<li><code>[x for x in &#x3C;iterable>]</code></li>\n<li><code>[&#x3C;repr> for x in &#x3C;iterable>]</code></li>\n<li><code>[&#x3C;repr> for x in &#x3C;iterable> if &#x3C;condition>]</code></li>\n</ul>\n<p>다음은  리스트 컴프리헨션의 사용 예시다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; pis = [str(rount(math.pi, i)) for i in range(1, 6)]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; pis</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">[&#39;3.1&#39;, &#39;3.14&#39;, &#39;3.142&#39;, &#39;3.1416&#39;, &#39;3.14159&#39;]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&gt;&gt;&gt; years = [year for year in range(1995, 2022) if year % 5 == 0]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">[1995, 2000, 2005, 2010, 2015, 2020]</span></span></code></pre>\n<p>리스트 컴프리헨션은 연결(concatenate)보다 일반적으로 빠르다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">import</span><span class=\"mtk1\"> timeit</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># list concatenation</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">def</span><span class=\"mtk1\"> </span><span class=\"mtk6\">test_concat</span><span class=\"mtk1\">():</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    l </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> []</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">for</span><span class=\"mtk1\"> i </span><span class=\"mtk7\">in</span><span class=\"mtk1\"> </span><span class=\"mtk15\">range</span><span class=\"mtk1\">(</span><span class=\"mtk4\">10000</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        l </span><span class=\"mtk7\">+=</span><span class=\"mtk1\"> [i]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># list comprehension</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">def</span><span class=\"mtk1\"> </span><span class=\"mtk6\">test_compre</span><span class=\"mtk1\">():</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    l </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">list</span><span class=\"mtk1\">(</span><span class=\"mtk15\">range</span><span class=\"mtk1\">(</span><span class=\"mtk4\">10000</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">if</span><span class=\"mtk1\"> __name__ </span><span class=\"mtk7\">==</span><span class=\"mtk1\"> </span><span class=\"mtk11\">&#39;__main__&#39;</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    t1 </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> timeit.Timer(</span><span class=\"mtk11\">&quot;test_concat()&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&quot;from __main__ import test_concat&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">print</span><span class=\"mtk1\">(</span><span class=\"mtk11\">&quot;concat &quot;</span><span class=\"mtk1\">, t1.timeit(</span><span class=\"mtk19 mtki\">number</span><span class=\"mtk7\">=</span><span class=\"mtk4\">10000</span><span class=\"mtk1\">), </span><span class=\"mtk11\">&#39;ms&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    t2 </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> timeit.Timer(</span><span class=\"mtk11\">&quot;test_compre()&quot;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&quot;from __main__ import test_compre&quot;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">print</span><span class=\"mtk1\">(</span><span class=\"mtk11\">&quot;comprehension &quot;</span><span class=\"mtk1\">, t2.timeit(</span><span class=\"mtk19 mtki\">number</span><span class=\"mtk7\">=</span><span class=\"mtk4\">10000</span><span class=\"mtk1\">), </span><span class=\"mtk11\">&#39;ms&#39;</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<pre class=\"grvsc-container abyss\" data-language=\"\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">concat  3.919952416 ms</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">comprehension  0.8694067079999996 ms</span></span></code></pre>\n<p>만 번 수행한 경우 리스트 컴프리헨션이 for문을 통한 연결보다 4~5배 정도 빨랐다.</p>\n<br>\n<br>\n<h2>참고 자료</h2>\n<ul>\n<li>An Introduction to Python &#x26; Algorithms, Mia Stein</li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .abyss { background-color: #000c18; }\n  .abyss .mtki { font-style: italic; }\n  .abyss .mtk7 { color: #225588; }\n  .abyss .mtk1 { color: #6688CC; }\n  .abyss .mtk3 { color: #384887; }\n  .abyss .mtk15 { color: #9966B8; }\n  .abyss .mtk6 { color: #DDBB88; }\n  .abyss .mtk4 { color: #F280D0; }\n  .abyss .mtk11 { color: #22AA44; }\n  .abyss .mtk19 { color: #2277FF; }\n  .abyss .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","frontmatter":{"title":"[Python] 시퀀스 자료구조 - list","date":"November 01, 2022"}}},"pageContext":{"slug":"/CS/Python/2022-11-01-python-list/","previous":{"fields":{"slug":"/CS/Python/2022-10-31-python-tuple/"},"frontmatter":{"title":"[Python] 시퀀스 자료구조 - tuple"}},"next":{"fields":{"slug":"/CS/Python/2022-11-03-python-set/"},"frontmatter":{"title":"[Python] 컬렉션 자료구조 - set"}}}},"staticQueryHashes":["1185972000","3231742164"],"slicesMap":{}}