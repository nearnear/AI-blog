{"componentChunkName":"component---src-templates-blog-post-js","path":"/CS/Python/2022-11-03-python-dictionary/","result":{"data":{"allMarkdownRemark":{"totalCount":26},"markdownRemark":{"id":"98b1b67e-ec66-5356-9ee8-7411aef6043b","html":"<h2>딕셔너리</h2>\n<p>Python의 dict(딕셔너리)는 해시 테이블로 구현되어 있다. 따라서 딕셔너리의 고유한 키에 해당하는 값을 상수 시간 내에 얻을 수 있다. 딕셔너리는 가변 객체이므로 항목의 추가 및 제거가 가능하지만, 인덱스 위치를 사용하여 접근하는 것은 불가능하며 삽입 순서를 기억하지 않는다.</p>\n<p>컬렉션 매핑 타입(mapping type)인 딕셔너리는 iterable 객체로, 멤버십 연산자 <code>in</code>과 <code>len()</code> 함수를 지원한다. 매핑은 key-value 항목의 컬렉션으로 각 항목에 대해 메서드를 제공한다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> mia_info </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk11\">&#39;name&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&#39;미아&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;age&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">45</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;job&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&#39;teacher&#39;</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> mia_info</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span><span class=\"mtk11\">&#39;name&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&#39;미아&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;age&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">45</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;job&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&#39;teacher&#39;</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> mia_info </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">dict</span><span class=\"mtk1\">(</span><span class=\"mtk19 mtki\">name</span><span class=\"mtk7\">=</span><span class=\"mtk11\">&#39;미아&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;age&#39;</span><span class=\"mtk7\">=</span><span class=\"mtk4\">45</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;job&#39;</span><span class=\"mtk7\">=</span><span class=\"mtk11\">&#39;teacher&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> mia_info</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span><span class=\"mtk11\">&#39;name&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&#39;미아&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;age&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">45</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;job&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&#39;teacher&#39;</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> mia_info </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">dict</span><span class=\"mtk1\">([(</span><span class=\"mtk11\">&#39;name&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;미아&#39;</span><span class=\"mtk1\">), (</span><span class=\"mtk11\">&#39;age&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">45</span><span class=\"mtk1\">), (</span><span class=\"mtk11\">&#39;job&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;teacher&#39;</span><span class=\"mtk1\">)])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span><span class=\"mtk11\">&#39;name&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&#39;미아&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;age&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">45</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;job&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&#39;teacher&#39;</span><span class=\"mtk1\">}</span></span></span></code></pre>\n<br>\n<br>\n<h2>딕셔너리 메서드</h2>\n<h3>setdefault()</h3>\n<p><code>A.setdefault(key, default)</code>는 딕셔너리 A에 key가 존재하는 경우 key에 해당하는 값을 반환하고,\nkey가 존재하지 않으면 key를 키로 default를 값으로하는 항목을 딕셔너리에 추가한다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">def</span><span class=\"mtk1\"> </span><span class=\"mtk6\">pairs_to_dict</span><span class=\"mtk1\">(</span><span class=\"mtk19 mtki\">data_pairs</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    new_dict </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> {}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">for</span><span class=\"mtk1\"> k, v </span><span class=\"mtk7\">in</span><span class=\"mtk1\"> data_pairs:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        new_dict.setdefault(k, []).append(v)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> new_dict</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">def</span><span class=\"mtk1\"> </span><span class=\"mtk6\">test</span><span class=\"mtk1\">():</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    data </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> ((</span><span class=\"mtk4\">1</span><span class=\"mtk1\">, </span><span class=\"mtk4\">5</span><span class=\"mtk1\">), (</span><span class=\"mtk4\">2</span><span class=\"mtk1\">, </span><span class=\"mtk4\">1</span><span class=\"mtk1\">), (</span><span class=\"mtk4\">2</span><span class=\"mtk1\">, </span><span class=\"mtk4\">3</span><span class=\"mtk1\">), (</span><span class=\"mtk4\">2</span><span class=\"mtk1\">, </span><span class=\"mtk4\">5</span><span class=\"mtk1\">), (</span><span class=\"mtk4\">3</span><span class=\"mtk1\">, </span><span class=\"mtk4\">5</span><span class=\"mtk1\">), (</span><span class=\"mtk4\">4</span><span class=\"mtk1\">, </span><span class=\"mtk4\">5</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    d1 </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> pairs_to_dict(data)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">print</span><span class=\"mtk1\">(</span><span class=\"mtk15 mtki\">f</span><span class=\"mtk11\">&#39;Result</span><span class=\"mtk4\">\\t</span><span class=\"mtk11\">: </span><span class=\"mtk4\">{</span><span class=\"mtk1\">d1</span><span class=\"mtk4\">}</span><span class=\"mtk11\">&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">if</span><span class=\"mtk1\"> __name__ </span><span class=\"mtk7\">==</span><span class=\"mtk1\"> </span><span class=\"mtk11\">&#39;__main__&#39;</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    test()</span></span></span></code></pre>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">Result\t: {</span><span class=\"mtk4\">1</span><span class=\"mtk1\">: [</span><span class=\"mtk4\">5</span><span class=\"mtk1\">], </span><span class=\"mtk4\">2</span><span class=\"mtk1\">: [</span><span class=\"mtk4\">1</span><span class=\"mtk1\">, </span><span class=\"mtk4\">3</span><span class=\"mtk1\">, </span><span class=\"mtk4\">5</span><span class=\"mtk1\">], </span><span class=\"mtk4\">3</span><span class=\"mtk1\">: [</span><span class=\"mtk4\">5</span><span class=\"mtk1\">], </span><span class=\"mtk4\">4</span><span class=\"mtk1\">: [</span><span class=\"mtk4\">5</span><span class=\"mtk1\">]}</span></span></span></code></pre>\n<br>\n<h3>update()</h3>\n<p><code>A.update(B)</code>는 딕셔너리 A에 딕셔너리 B의 key-value 쌍을 갱신한다.\nA에 B의 key k가 존재할 때, 해당 A의 k의 값을 B의 k에 해당하는 값으로 갱신한다.\nA에 존재하지 않는 B의 key-value 쌍은 A에 추가한다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> menu_to_price </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk11\">&#39;말차 라떼&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">4000</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;카페 라떼&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">3800</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> menu_to_price.update({</span><span class=\"mtk11\">&#39;말차 라떼&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">5600</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;아메리카노&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">3000</span><span class=\"mtk1\">})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> menu_to_price</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span><span class=\"mtk11\">&#39;말차 라떼&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">5600</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;카페 라떼&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">3800</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;아메리카노&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">3000</span><span class=\"mtk1\">}</span></span></span></code></pre>\n<br>\n<h3>get()</h3>\n<p><code>A.get(key, default)</code>는 딕셔너리 A의 key 값을 반환하되, key가 존재하지 않을 경우 default 값을 반환한다.\ndefault를 지정하지 않으면 None을 반환한다. get 메서드는 setdefault나 update와 달리 딕셔너리 A를 변경하지 않는다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> menu_to_price </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk11\">&#39;말차 라떼&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">5600</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;카페 라떼&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">3800</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;아메리카노&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">3000</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> menu_to_price.get(</span><span class=\"mtk11\">&#39;카페 라떼&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">500</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">3800</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> menu_to_price.get(</span><span class=\"mtk11\">&#39;핫초코&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">500</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">500</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> menu_to_price</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span><span class=\"mtk11\">&#39;말차 라떼&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">5600</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;카페 라떼&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">3800</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;아메리카노&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">3000</span><span class=\"mtk1\">}</span></span></span></code></pre>\n<br>\n<h3>items(), values(), keys()</h3>\n<p>items(), values(), keys()는 딕셔너리 view로 딕셔너리의 항목을 조회하는 읽기 전용 객체다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> menu_to_price </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk11\">&#39;말차 라떼&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">5600</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;카페 라떼&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">3800</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;아메리카노&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">3000</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> menu_to_price.items()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">dict_items([(</span><span class=\"mtk11\">&#39;말차 라떼&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">5600</span><span class=\"mtk1\">), (</span><span class=\"mtk11\">&#39;카페 라떼&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">3800</span><span class=\"mtk1\">), (</span><span class=\"mtk11\">&#39;아메리카노&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">3000</span><span class=\"mtk1\">)])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> menu_to_price.values()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">dict_values([</span><span class=\"mtk4\">5600</span><span class=\"mtk1\">, </span><span class=\"mtk4\">3800</span><span class=\"mtk1\">, </span><span class=\"mtk4\">3000</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> menu_to_price.keys()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">dict_keys([</span><span class=\"mtk11\">&#39;말차 라떼&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;카페 라떼&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;아메리카노&#39;</span><span class=\"mtk1\">])</span></span></span></code></pre>\n<br>\n<h3>pop(), popitem()</h3>\n<p><code>A.pop(key)</code>는 딕셔너리 A의 key 항목을 제거한 뒤 그 값을 반환한다.\n<code>A.popitem(key)</code>는 딕셔너리 A의 key 항목을 제거한 뒤 key와 값 쌍을 반환한다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> menu_to_price </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk11\">&#39;알리오올리오&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">12000</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;시금치 감자 뇨끼&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">15600</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> menu_to_price.pop(</span><span class=\"mtk11\">&#39;알리오올리오&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">12000</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> menu_to_price</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span><span class=\"mtk11\">&#39;시금치 감자 뇨끼&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">15600</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> menu_to_price.popitem(</span><span class=\"mtk11\">&#39;시금치 감자 뇨끼&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">(</span><span class=\"mtk11\">&#39;시금치 감자 뇨끼&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk4\">15600</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> menu_to_price</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{}</span></span></span></code></pre>\n<br>\n<h3>clear()</h3>\n<p>딕셔너리의 항목을 모두 제거한다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> menu_to_price </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk11\">&#39;알리오올리오&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">12000</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;시금치 감자 뇨끼&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">15600</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> menu_to_price.clear()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> menu_to_price</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{}</span></span></span></code></pre>\n<br>\n<br>\n<h2>딕셔너리 순회</h2>\n<p>딕셔너리를 순회하기 위해서 임의의 순서로 나타나는 키를 사용할 수 있다. 또는 키를 sorted()로 정렬하여 탐색할 수도 있다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> d1 </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk7\">-</span><span class=\"mtk1\">k: k </span><span class=\"mtk7\">+</span><span class=\"mtk1\"> </span><span class=\"mtk4\">5</span><span class=\"mtk1\"> </span><span class=\"mtk7\">for</span><span class=\"mtk1\"> k </span><span class=\"mtk7\">in</span><span class=\"mtk1\"> </span><span class=\"mtk15\">range</span><span class=\"mtk1\">(</span><span class=\"mtk4\">5</span><span class=\"mtk1\">)}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> d1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span><span class=\"mtk4\">0</span><span class=\"mtk1\">: </span><span class=\"mtk4\">5</span><span class=\"mtk1\">, </span><span class=\"mtk7\">-</span><span class=\"mtk4\">1</span><span class=\"mtk1\">: </span><span class=\"mtk4\">6</span><span class=\"mtk1\">, </span><span class=\"mtk7\">-</span><span class=\"mtk4\">2</span><span class=\"mtk1\">: </span><span class=\"mtk4\">7</span><span class=\"mtk1\">, </span><span class=\"mtk7\">-</span><span class=\"mtk4\">3</span><span class=\"mtk1\">: </span><span class=\"mtk4\">8</span><span class=\"mtk1\">, </span><span class=\"mtk7\">-</span><span class=\"mtk4\">4</span><span class=\"mtk1\">: </span><span class=\"mtk4\">9</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">for</span><span class=\"mtk1\"> key </span><span class=\"mtk7\">in</span><span class=\"mtk1\"> </span><span class=\"mtk15\">sorted</span><span class=\"mtk1\">(d1.keys()):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">...</span><span class=\"mtk1\">     </span><span class=\"mtk15\">print</span><span class=\"mtk1\">(key, d1[key])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">-</span><span class=\"mtk4\">4</span><span class=\"mtk1\"> </span><span class=\"mtk4\">9</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">-</span><span class=\"mtk4\">3</span><span class=\"mtk1\"> </span><span class=\"mtk4\">8</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">-</span><span class=\"mtk4\">2</span><span class=\"mtk1\"> </span><span class=\"mtk4\">7</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">-</span><span class=\"mtk4\">1</span><span class=\"mtk1\"> </span><span class=\"mtk4\">6</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">0</span><span class=\"mtk1\"> </span><span class=\"mtk4\">5</span></span></span></code></pre>\n<br>\n<br>\n<h2>딕셔너리 분기</h2>\n<p>딕셔너리를 활용해 if ~ elif ~ 문을 구현할 수 있다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">def</span><span class=\"mtk1\"> </span><span class=\"mtk6\">plan_a</span><span class=\"mtk1\">():</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">print</span><span class=\"mtk1\">(</span><span class=\"mtk11\">&#39;Plan A&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">def</span><span class=\"mtk1\"> </span><span class=\"mtk6\">plan_b</span><span class=\"mtk1\">():</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">print</span><span class=\"mtk1\">(</span><span class=\"mtk11\">&#39;Plan B&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">if</span><span class=\"mtk1\"> __name__ </span><span class=\"mtk7\">==</span><span class=\"mtk1\"> </span><span class=\"mtk11\">&#39;__main__&#39;</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    action </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk11\">&#39;run&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    functions </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">dict</span><span class=\"mtk1\">(</span><span class=\"mtk19 mtki\">walk</span><span class=\"mtk7\">=</span><span class=\"mtk1\">plan_a, </span><span class=\"mtk19 mtki\">run</span><span class=\"mtk7\">=</span><span class=\"mtk1\">plan_b)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    functions[action]()</span></span></span></code></pre>\n<pre class=\"grvsc-container abyss\" data-language=\"\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Plan B</span></span></code></pre>\n<br>\n<br>\n<h2>참고 자료</h2>\n<ul>\n<li>An Introduction to Python &#x26; Algorithms, Mia Stein</li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .abyss { background-color: #000c18; }\n  .abyss .mtki { font-style: italic; }\n  .abyss .mtk7 { color: #225588; }\n  .abyss .mtk1 { color: #6688CC; }\n  .abyss .mtk11 { color: #22AA44; }\n  .abyss .mtk4 { color: #F280D0; }\n  .abyss .mtk15 { color: #9966B8; }\n  .abyss .mtk19 { color: #2277FF; }\n  .abyss .mtk6 { color: #DDBB88; }\n  .abyss .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","frontmatter":{"title":"python 컬렉션 자료구조 - dict","date":"November 03, 2022"}}},"pageContext":{"slug":"/CS/Python/2022-11-03-python-dictionary/","previous":{"fields":{"slug":"/CS/Python/2022-11-03-python-set/"},"frontmatter":{"title":"python 컬렉션 자료구조 - set"}},"next":{"fields":{"slug":"/AI/Vision/fgfa/"},"frontmatter":{"title":"[Paper] FGFA for Video Object Detection, 2017"}}}},"staticQueryHashes":["1185972000","3231742164"],"slicesMap":{}}