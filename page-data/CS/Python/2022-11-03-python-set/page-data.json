{"componentChunkName":"component---src-templates-blog-post-js","path":"/CS/Python/2022-11-03-python-set/","result":{"data":{"allMarkdownRemark":{"totalCount":51},"markdownRemark":{"id":"4866c30f-846f-5af5-acd5-186460dd2446","html":"<h2>셋</h2>\n<p>Python의 set(셋)은 수학의 집합 개념에 기반한 컬렉션 데이터 타입으로, 중복 요소가 없고 정렬되지 않은\n컨테이너(container)이다. 셋에는 순서의 개념이 없으므로 인덱스 연산은 불가능하며 주로 멤버십 테스트 및 중복 항목 제거를 위해\n사용된다. 셋에서 항목을 삽입하는 시간 복잡도는 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span>이고, 두개 집합의 합집합(union)의 경우 시간 복잡도는 각 집합의 원소\n개수 m과 n에 대해 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>m</mi><mo>+</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(m+n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span>이다. 교집합(intersection)의 경우 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>></mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">m > n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span></span>일때 <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span></span>이다.</p>\n<br>\n<br>\n<h2>셋 메서드</h2>\n<h3>add()</h3>\n<p><code>A.add(x)</code>는 셋 A에 항목 x를 추가한다. 이미 항목 x가 있는 경우 아무 작업도 수행하지 않는다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> drinks </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk11\">&#39;카페 라떼&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;자몽허니 블랙티&#39;</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> drinks.add(</span><span class=\"mtk11\">&#39;초코 프라푸치노&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> drinks</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span><span class=\"mtk11\">&#39;카페 라떼&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;자몽허니 블랙티&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;초코 프라푸치노&#39;</span><span class=\"mtk1\">}</span></span></span></code></pre>\n<br>\n<h3>update()과 연산자 |=</h3>\n<p><code>A.update(B)</code> 또는 <code>A |= B</code>는 셋 B를 셋 A에 합집합의 개념으로 추가한다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> drinks </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk11\">&#39;카페 라떼&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;자몽허니 블랙티&#39;</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> drinks.update({</span><span class=\"mtk11\">&#39;카페 라뗴&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;카라멜 마끼아또&#39;</span><span class=\"mtk1\">})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> drinks</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span><span class=\"mtk11\">&#39;카페 라떼&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;자몽허니 블랙티&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;카라멜 마끼아또&#39;</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> drinks </span><span class=\"mtk7\">|=</span><span class=\"mtk1\"> {</span><span class=\"mtk11\">&#39;카페 라떼&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;자몽허니 블랙티&#39;</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> drinks</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span><span class=\"mtk11\">&#39;카페 라떼&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;자몽허니 블랙티&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;카라멜 마끼아또&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;자몽허니 블랙티&#39;</span><span class=\"mtk1\">}</span></span></span></code></pre>\n<br>\n<h3>union()과 연산자 |</h3>\n<p><code>A.union(B)</code> 또는 <code>A | B</code>는 update와 같은 작업을 수행하지만 연산 결과를 사본으로 반환하는 점에서 다르다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> drinks </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk11\">&#39;카페 라떼&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;자몽허니 블랙티&#39;</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> drinks.union({</span><span class=\"mtk11\">&#39;카페 라뗴&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;카라멜 마끼아또&#39;</span><span class=\"mtk1\">})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span><span class=\"mtk11\">&#39;카페 라떼&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;자몽허니 블랙티&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;카라멜 마끼아또&#39;</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> drinks </span><span class=\"mtk7\">|</span><span class=\"mtk1\"> {</span><span class=\"mtk11\">&#39;카페 라떼&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;자몽허니 블랙티&#39;</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span><span class=\"mtk11\">&#39;카페 라떼&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;자몽허니 블랙티&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;카라멜 마끼아또&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;자몽허니 블랙티&#39;</span><span class=\"mtk1\">}</span></span></span></code></pre>\n<br>\n<h3>intersection() 또는 연산자 &#x26;</h3>\n<p><code>A.intersection(B)</code> 또는 <code>A &#x26; B</code>는 셋 A와 셋 B의 교집합의 복사본을 반환한다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> path1 </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk11\">&#39;point_a&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;point_b&#39;</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> path2 </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk11\">&#39;point_a&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;point_c&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;point_d&#39;</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> path1.intersection(path2)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span><span class=\"mtk11\">&#39;point_a&#39;</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> path2.intersection(path1)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span><span class=\"mtk11\">&#39;point_a&#39;</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> path1 </span><span class=\"mtk7\">&amp;</span><span class=\"mtk1\"> pathB</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span><span class=\"mtk11\">&#39;point_a&#39;</span><span class=\"mtk1\">}</span></span></span></code></pre>\n<br>\n<h3>difference() 또는 연산자 -</h3>\n<p><code>A.difference(B)</code> 또는 <code>A - B</code>는 셋 A에서 셋 B를 뺀 차집합의 복사본을 반환한다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> path1 </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk11\">&#39;point_a&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;point_b&#39;</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> path2 </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk11\">&#39;point_a&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;point_c&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;point_d&#39;</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> path1.difference(path2)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span><span class=\"mtk11\">&#39;point_b&#39;</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> path1 </span><span class=\"mtk7\">-</span><span class=\"mtk1\"> path2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span><span class=\"mtk11\">&#39;point_b&#39;</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> path2 </span><span class=\"mtk7\">-</span><span class=\"mtk1\"> path1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span><span class=\"mtk11\">&#39;point_c&#39;</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;point_d&#39;</span><span class=\"mtk1\">}</span></span></span></code></pre>\n<br>\n<h3>clear()</h3>\n<p><code>A.clear()</code>는 셋 A의 모든 항목을 제거한다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> numbers </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">set</span><span class=\"mtk1\">(k </span><span class=\"mtk7\">for</span><span class=\"mtk1\"> k </span><span class=\"mtk7\">in</span><span class=\"mtk1\"> </span><span class=\"mtk15\">range</span><span class=\"mtk1\">(</span><span class=\"mtk4\">5</span><span class=\"mtk1\">, </span><span class=\"mtk4\">100</span><span class=\"mtk1\">) </span><span class=\"mtk7\">if</span><span class=\"mtk1\"> k </span><span class=\"mtk7\">%</span><span class=\"mtk1\"> </span><span class=\"mtk4\">7</span><span class=\"mtk1\"> </span><span class=\"mtk7\">==</span><span class=\"mtk1\"> </span><span class=\"mtk4\">1</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> numbers.clear()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> numbers()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">set</span><span class=\"mtk1\">()</span></span></span></code></pre>\n<br>\n<h3>discard(), remove(), pop()</h3>\n<p><code>A.discard(x)</code>는 셋 A에서 항목 x를 찾아 제거하며 반환값은 없다. <code>A.remove(x)</code>는 discard()와 같지만\n항목 x가 없는 경우 KeyError 예외를 발생시킨다. <code>A.pop()</code>은 셋 A의 항목 하나를 무작위로 제거하고 항목을 반환한다.\n셋이 비어 제거할 항목이 없는 경우 KeyError 예외를 발생시킨다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> numbers </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">set</span><span class=\"mtk1\">(</span><span class=\"mtk15\">range</span><span class=\"mtk1\">(</span><span class=\"mtk4\">10</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> numbers.discard(</span><span class=\"mtk4\">1</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> numbers</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span><span class=\"mtk4\">0</span><span class=\"mtk1\">, </span><span class=\"mtk4\">2</span><span class=\"mtk1\">, </span><span class=\"mtk4\">3</span><span class=\"mtk1\">, </span><span class=\"mtk4\">4</span><span class=\"mtk1\">, </span><span class=\"mtk4\">5</span><span class=\"mtk1\">, </span><span class=\"mtk4\">6</span><span class=\"mtk1\">, </span><span class=\"mtk4\">7</span><span class=\"mtk1\">, </span><span class=\"mtk4\">8</span><span class=\"mtk1\">, </span><span class=\"mtk4\">9</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> numbers.discard(</span><span class=\"mtk4\">10</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> numbers.remove(</span><span class=\"mtk4\">2</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> numbers</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span><span class=\"mtk4\">0</span><span class=\"mtk1\">, </span><span class=\"mtk4\">3</span><span class=\"mtk1\">, </span><span class=\"mtk4\">4</span><span class=\"mtk1\">, </span><span class=\"mtk4\">5</span><span class=\"mtk1\">, </span><span class=\"mtk4\">6</span><span class=\"mtk1\">, </span><span class=\"mtk4\">7</span><span class=\"mtk1\">, </span><span class=\"mtk4\">8</span><span class=\"mtk1\">, </span><span class=\"mtk4\">9</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> numbers.remove(</span><span class=\"mtk4\">10</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">Traceback (most recent call last):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  File </span><span class=\"mtk11\">&quot;&lt;stdin&gt;&quot;</span><span class=\"mtk1\">, line </span><span class=\"mtk4\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">in</span><span class=\"mtk1\"> </span><span class=\"mtk7\">&lt;</span><span class=\"mtk1\">module</span><span class=\"mtk7\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">KeyError</span><span class=\"mtk1\">: </span><span class=\"mtk4\">10</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> numbers.pop()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">set</span><span class=\"mtk1\">().pop()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">Traceback (most recent call last):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  File </span><span class=\"mtk11\">&quot;&lt;stdin&gt;&quot;</span><span class=\"mtk1\">, line </span><span class=\"mtk4\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">in</span><span class=\"mtk1\"> </span><span class=\"mtk7\">&lt;</span><span class=\"mtk1\">module</span><span class=\"mtk7\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">KeyError</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&#39;pop from an empty set&#39;</span></span></span></code></pre>\n<p>셋과 유사한 데이터 타입 frozen set은 불변 객체로, <code>frozenset()</code>으로 생성한다. 가변 객체인 셋과 달리 프로즌 셋의 요소를 변경하는 메서드를 사용할 수 없다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> fs </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">frozenset</span><span class=\"mtk1\">(</span><span class=\"mtk15\">range</span><span class=\"mtk1\">(</span><span class=\"mtk4\">10</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk4\">3</span><span class=\"mtk1\"> </span><span class=\"mtk7\">in</span><span class=\"mtk1\"> fs</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">True</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk15\">len</span><span class=\"mtk1\">(fs)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">10</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> fs.add(</span><span class=\"mtk4\">5</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">Traceback (most recent call last):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  File </span><span class=\"mtk11\">&quot;&lt;stdin&gt;&quot;</span><span class=\"mtk1\">, line </span><span class=\"mtk4\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">in</span><span class=\"mtk1\"> </span><span class=\"mtk7\">&lt;</span><span class=\"mtk1\">module</span><span class=\"mtk7\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">AttributeError</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&#39;frozenset&#39;</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">object</span><span class=\"mtk1\"> has no attribute </span><span class=\"mtk11\">&#39;add&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> fs.union(</span><span class=\"mtk15\">range</span><span class=\"mtk1\">(</span><span class=\"mtk4\">12</span><span class=\"mtk1\">, </span><span class=\"mtk4\">14</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">frozenset</span><span class=\"mtk1\">({</span><span class=\"mtk4\">0</span><span class=\"mtk1\">, </span><span class=\"mtk4\">1</span><span class=\"mtk1\">, </span><span class=\"mtk4\">2</span><span class=\"mtk1\">, </span><span class=\"mtk4\">3</span><span class=\"mtk1\">, </span><span class=\"mtk4\">4</span><span class=\"mtk1\">, </span><span class=\"mtk4\">5</span><span class=\"mtk1\">, </span><span class=\"mtk4\">6</span><span class=\"mtk1\">, </span><span class=\"mtk4\">7</span><span class=\"mtk1\">, </span><span class=\"mtk4\">8</span><span class=\"mtk1\">, </span><span class=\"mtk4\">9</span><span class=\"mtk1\">, </span><span class=\"mtk4\">12</span><span class=\"mtk1\">, </span><span class=\"mtk4\">13</span><span class=\"mtk1\">})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> fs.intersection(</span><span class=\"mtk15\">range</span><span class=\"mtk1\">(</span><span class=\"mtk4\">5</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">frozenset</span><span class=\"mtk1\">({</span><span class=\"mtk4\">0</span><span class=\"mtk1\">, </span><span class=\"mtk4\">1</span><span class=\"mtk1\">, </span><span class=\"mtk4\">2</span><span class=\"mtk1\">, </span><span class=\"mtk4\">3</span><span class=\"mtk1\">, </span><span class=\"mtk4\">4</span><span class=\"mtk1\">})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> fs.difference(</span><span class=\"mtk15\">range</span><span class=\"mtk1\">(</span><span class=\"mtk4\">7</span><span class=\"mtk1\">))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">frozenset</span><span class=\"mtk1\">({</span><span class=\"mtk4\">7</span><span class=\"mtk1\">, </span><span class=\"mtk4\">8</span><span class=\"mtk1\">, </span><span class=\"mtk4\">9</span><span class=\"mtk1\">})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> fs.clear()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">Traceback (most recent call last):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  File </span><span class=\"mtk11\">&quot;&lt;stdin&gt;&quot;</span><span class=\"mtk1\">, line </span><span class=\"mtk4\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">in</span><span class=\"mtk1\"> </span><span class=\"mtk7\">&lt;</span><span class=\"mtk1\">module</span><span class=\"mtk7\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">AttributeError</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&#39;frozenset&#39;</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">object</span><span class=\"mtk1\"> has no attribute </span><span class=\"mtk11\">&#39;clear&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">&gt;&gt;&gt;</span><span class=\"mtk1\"> fs.discard()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">Traceback (most recent call last):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  File </span><span class=\"mtk11\">&quot;&lt;stdin&gt;&quot;</span><span class=\"mtk1\">, line </span><span class=\"mtk4\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">in</span><span class=\"mtk1\"> </span><span class=\"mtk7\">&lt;</span><span class=\"mtk1\">module</span><span class=\"mtk7\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">AttributeError</span><span class=\"mtk1\">: </span><span class=\"mtk11\">&#39;frozenset&#39;</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">object</span><span class=\"mtk1\"> has no attribute </span><span class=\"mtk11\">&#39;discard&#39;</span></span></span></code></pre>\n<br>\n<br>\n<h2>셋과 리스트</h2>\n<p><code>set(A)</code>는 리스트 A를 셋 타입으로 변환(casting)하며, <code>list(set(A))</code>를 통해 연산 결과를 리스트 타입으로 반환할\n수 있다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">def</span><span class=\"mtk1\"> </span><span class=\"mtk6\">remove_dup</span><span class=\"mtk1\">(</span><span class=\"mtk19 mtki\">list1</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">list</span><span class=\"mtk1\">(</span><span class=\"mtk15 mtki\">set</span><span class=\"mtk1\">(list1))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">def</span><span class=\"mtk1\"> </span><span class=\"mtk6\">intersection</span><span class=\"mtk1\">(</span><span class=\"mtk19 mtki\">list1</span><span class=\"mtk1\">, </span><span class=\"mtk19 mtki\">list2</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">list</span><span class=\"mtk1\">(</span><span class=\"mtk15 mtki\">set</span><span class=\"mtk1\">(list1) </span><span class=\"mtk7\">&amp;</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">set</span><span class=\"mtk1\">(list2))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">def</span><span class=\"mtk1\"> </span><span class=\"mtk6\">union</span><span class=\"mtk1\">(</span><span class=\"mtk19 mtki\">list1</span><span class=\"mtk1\">, </span><span class=\"mtk19 mtki\">list2</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">return</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">list</span><span class=\"mtk1\">(</span><span class=\"mtk15 mtki\">set</span><span class=\"mtk1\">(list1) </span><span class=\"mtk7\">|</span><span class=\"mtk1\"> </span><span class=\"mtk15 mtki\">set</span><span class=\"mtk1\">(list2))</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">def</span><span class=\"mtk1\"> </span><span class=\"mtk6\">test</span><span class=\"mtk1\">():</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    list1 </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> [</span><span class=\"mtk4\">1</span><span class=\"mtk1\">, </span><span class=\"mtk4\">2</span><span class=\"mtk1\">, </span><span class=\"mtk4\">3</span><span class=\"mtk1\">, </span><span class=\"mtk4\">4</span><span class=\"mtk1\">, </span><span class=\"mtk4\">5</span><span class=\"mtk1\">, </span><span class=\"mtk4\">5</span><span class=\"mtk1\">, </span><span class=\"mtk4\">5</span><span class=\"mtk1\">, </span><span class=\"mtk4\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">-</span><span class=\"mtk4\">1</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    list2 </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> [</span><span class=\"mtk4\">2</span><span class=\"mtk1\">, </span><span class=\"mtk4\">5</span><span class=\"mtk1\">, </span><span class=\"mtk4\">6</span><span class=\"mtk1\">, </span><span class=\"mtk4\">6</span><span class=\"mtk1\">, </span><span class=\"mtk4\">0</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">assert</span><span class=\"mtk1\">(remove_dup(list1) </span><span class=\"mtk7\">==</span><span class=\"mtk1\"> [</span><span class=\"mtk4\">0</span><span class=\"mtk1\">, </span><span class=\"mtk4\">1</span><span class=\"mtk1\">, </span><span class=\"mtk4\">2</span><span class=\"mtk1\">, </span><span class=\"mtk4\">3</span><span class=\"mtk1\">, </span><span class=\"mtk4\">4</span><span class=\"mtk1\">, </span><span class=\"mtk4\">5</span><span class=\"mtk1\">, </span><span class=\"mtk7\">-</span><span class=\"mtk4\">1</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">assert</span><span class=\"mtk1\">(intersection(list1, list2) </span><span class=\"mtk7\">!=</span><span class=\"mtk1\"> [</span><span class=\"mtk4\">2</span><span class=\"mtk1\">, </span><span class=\"mtk4\">5</span><span class=\"mtk1\">, </span><span class=\"mtk4\">0</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">assert</span><span class=\"mtk1\">(intersection(list1, list2) </span><span class=\"mtk7\">==</span><span class=\"mtk1\"> [</span><span class=\"mtk4\">0</span><span class=\"mtk1\">, </span><span class=\"mtk4\">2</span><span class=\"mtk1\">, </span><span class=\"mtk4\">5</span><span class=\"mtk1\">]) </span><span class=\"mtk3\"># 순서에 유의하자.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">assert</span><span class=\"mtk1\">(union(list1, list2) </span><span class=\"mtk7\">!=</span><span class=\"mtk1\"> [</span><span class=\"mtk4\">1</span><span class=\"mtk1\">, </span><span class=\"mtk4\">2</span><span class=\"mtk1\">, </span><span class=\"mtk4\">3</span><span class=\"mtk1\">, </span><span class=\"mtk4\">4</span><span class=\"mtk1\">, </span><span class=\"mtk4\">5</span><span class=\"mtk1\">, </span><span class=\"mtk4\">6</span><span class=\"mtk1\">, </span><span class=\"mtk4\">0</span><span class=\"mtk1\">, </span><span class=\"mtk7\">-</span><span class=\"mtk4\">1</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">assert</span><span class=\"mtk1\">(union(list1, list2) </span><span class=\"mtk7\">==</span><span class=\"mtk1\"> [</span><span class=\"mtk4\">0</span><span class=\"mtk1\">, </span><span class=\"mtk4\">1</span><span class=\"mtk1\">, </span><span class=\"mtk4\">2</span><span class=\"mtk1\">, </span><span class=\"mtk4\">3</span><span class=\"mtk1\">, </span><span class=\"mtk4\">4</span><span class=\"mtk1\">, </span><span class=\"mtk4\">5</span><span class=\"mtk1\">, </span><span class=\"mtk4\">6</span><span class=\"mtk1\">, </span><span class=\"mtk7\">-</span><span class=\"mtk4\">1</span><span class=\"mtk1\">]) </span><span class=\"mtk3\"># 순서에 유의하자.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">print</span><span class=\"mtk1\">(</span><span class=\"mtk11\">&#39;테스트 통과!&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">if</span><span class=\"mtk1\"> __name__ </span><span class=\"mtk7\">==</span><span class=\"mtk1\"> </span><span class=\"mtk11\">&#39;__main__&#39;</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    test()</span></span></span></code></pre>\n<pre class=\"grvsc-container abyss\" data-language=\"\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">테스트 통과!</span></span></code></pre>\n<p>주목할 것은 <code>list(set(A))</code>의 반환값이 리스트 A의 순서를 그대로 보존하지 않는다는 점이다.</p>\n<p>리스트 뿐만 아니라 딕셔너리도 셋 속성을 사용할 수 있다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"python\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15 mtki\">def</span><span class=\"mtk1\"> </span><span class=\"mtk6\">dict_set_operation</span><span class=\"mtk1\">():</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    d1 </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk11\">&#39;k1&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">4</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;k2&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">5</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;k3&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">2</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    d2 </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> {</span><span class=\"mtk11\">&#39;k7&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">5</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;k2&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">5</span><span class=\"mtk1\">, </span><span class=\"mtk11\">&#39;k8&#39;</span><span class=\"mtk1\">: </span><span class=\"mtk4\">2</span><span class=\"mtk1\">}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">print</span><span class=\"mtk1\">(</span><span class=\"mtk15 mtki\">f</span><span class=\"mtk11\">&#39;Dict1</span><span class=\"mtk4\">\\t\\t</span><span class=\"mtk11\">: </span><span class=\"mtk4\">{</span><span class=\"mtk1\">d1</span><span class=\"mtk4\">}\\n</span><span class=\"mtk11\">Dict2</span><span class=\"mtk4\">\\t\\t</span><span class=\"mtk11\">: </span><span class=\"mtk4\">{</span><span class=\"mtk1\">d2</span><span class=\"mtk4\">}</span><span class=\"mtk11\">&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    its </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> d1.keys() </span><span class=\"mtk7\">&amp;</span><span class=\"mtk1\"> d2.keys()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    its_items </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> d1.items() </span><span class=\"mtk7\">&amp;</span><span class=\"mtk1\"> d2.items()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">print</span><span class=\"mtk1\">(</span><span class=\"mtk15 mtki\">f</span><span class=\"mtk11\">&#39;Itersection</span><span class=\"mtk4\">\\t</span><span class=\"mtk11\">: </span><span class=\"mtk4\">{</span><span class=\"mtk1\">its</span><span class=\"mtk4\">}\\n\\t\\t</span><span class=\"mtk11\">: </span><span class=\"mtk4\">{</span><span class=\"mtk1\">its_items</span><span class=\"mtk4\">}</span><span class=\"mtk11\">&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    sbt1 </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> d1.keys() </span><span class=\"mtk7\">-</span><span class=\"mtk1\"> d2.keys()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    sbt1_items </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> d1.items() </span><span class=\"mtk7\">-</span><span class=\"mtk1\"> d2.items()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">print</span><span class=\"mtk1\">(</span><span class=\"mtk15 mtki\">f</span><span class=\"mtk11\">&#39;Subtraction 1</span><span class=\"mtk4\">\\t</span><span class=\"mtk11\">: </span><span class=\"mtk4\">{</span><span class=\"mtk1\">sbt1</span><span class=\"mtk4\">}\\n\\t\\t</span><span class=\"mtk11\">: </span><span class=\"mtk4\">{</span><span class=\"mtk1\">sbt1_items</span><span class=\"mtk4\">}</span><span class=\"mtk11\">&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    sbt2 </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> d2.keys() </span><span class=\"mtk7\">-</span><span class=\"mtk1\"> d1.keys()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    sbt2_items </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> d2.items() </span><span class=\"mtk7\">-</span><span class=\"mtk1\"> d1.items()</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk15\">print</span><span class=\"mtk1\">(</span><span class=\"mtk15 mtki\">f</span><span class=\"mtk11\">&#39;Subtraction 2</span><span class=\"mtk4\">\\t</span><span class=\"mtk11\">: </span><span class=\"mtk4\">{</span><span class=\"mtk1\">sbt2</span><span class=\"mtk4\">}\\n\\t\\t</span><span class=\"mtk11\">: </span><span class=\"mtk4\">{</span><span class=\"mtk1\">sbt2_items</span><span class=\"mtk4\">}</span><span class=\"mtk11\">&#39;</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">if</span><span class=\"mtk1\"> __name__ </span><span class=\"mtk7\">==</span><span class=\"mtk1\"> </span><span class=\"mtk11\">&#39;__main__&#39;</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    dict_set_operation()</span></span></span></code></pre>\n<pre class=\"grvsc-container abyss\" data-language=\"\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Dict1\t\t: {&#39;k1&#39;: 4, &#39;k2&#39;: 5, &#39;k3&#39;: 2}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Dict2\t\t: {&#39;k7&#39;: 5, &#39;k2&#39;: 5, &#39;k8&#39;: 2}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Itersection\t: {&#39;k2&#39;}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t\t: {(&#39;k2&#39;, 5)}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Subtraction 1\t: {&#39;k3&#39;, &#39;k1&#39;}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t\t: {(&#39;k1&#39;, 4), (&#39;k3&#39;, 2)}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">Subtraction 2\t: {&#39;k8&#39;, &#39;k7&#39;}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">\t\t: {(&#39;k8&#39;, 2), (&#39;k7&#39;, 5)}</span></span></code></pre>\n<br>\n<br>\n<h2>참고 자료</h2>\n<ul>\n<li>An Introduction to Python &#x26; Algorithms, Mia Stein</li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .abyss { background-color: #000c18; }\n  .abyss .mtki { font-style: italic; }\n  .abyss .mtk7 { color: #225588; }\n  .abyss .mtk1 { color: #6688CC; }\n  .abyss .mtk11 { color: #22AA44; }\n  .abyss .mtk15 { color: #9966B8; }\n  .abyss .mtk4 { color: #F280D0; }\n  .abyss .mtk6 { color: #DDBB88; }\n  .abyss .mtk19 { color: #2277FF; }\n  .abyss .mtk3 { color: #384887; }\n  .abyss .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","frontmatter":{"title":"[Python] 컬렉션 자료구조 - set","date":"November 03, 2022"}}},"pageContext":{"slug":"/CS/Python/2022-11-03-python-set/","previous":{"fields":{"slug":"/CS/Python/2022-11-01-python-list/"},"frontmatter":{"title":"[Python] 시퀀스 자료구조 - list"}},"next":{"fields":{"slug":"/CS/Python/2022-11-03-python-dictionary/"},"frontmatter":{"title":"[Python] 컬렉션 자료구조 - dict"}}}},"staticQueryHashes":["1185972000","3231742164"],"slicesMap":{}}