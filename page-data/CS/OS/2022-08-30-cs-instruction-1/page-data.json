{"componentChunkName":"component---src-templates-blog-post-js","path":"/CS/OS/2022-08-30-cs-instruction-1/","result":{"data":{"allMarkdownRemark":{"totalCount":53},"markdownRemark":{"id":"a4f7bc1c-4640-51e7-b7d1-badb5a5566bc","html":"<h2>1. 소스 코드를 명령어로</h2>\n<p>일반적으로 컴퓨터에 명령을 내리기 위해서 사람이 소스 코드를 작성하여 실행한다.\n그러나 컴퓨터는 사람이 작성하는 소스 코드를 직접 실행할 수 없으므로, 반드시 명령어로 변환하는 작업이 필요하다.\n명령어는 CPU 내부에서 명령어 레지스터를 통해 제어 장치에 전달되어 실행된다.</p>\n<p>실제로는 고급 언어로 쓰여진 소스 코드가 저급 언어로 쓰여진 오브젝트 코드로 변환되며, 오브젝트 코드의 명령어가 링킹을 통해\n실행 코드로 변형되어 실행되는 과정을 거친다.</p>\n<br>\n<div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtext>source code</mtext><mover><mo stretchy=\"true\" minsize=\"3.0em\">→</mo><mpadded width=\"+0.6em\" lspace=\"0.3em\"><mrow><mi>t</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>s</mi><mi>l</mi><mi>a</mi><mi>t</mi><mi>o</mi><mi>r</mi></mrow></mpadded></mover><mtext>object code</mtext><mover><mo stretchy=\"true\" minsize=\"3.0em\">→</mo><mpadded width=\"+0.6em\" lspace=\"0.3em\"><mrow></mrow></mpadded></mover><mtext>instructions</mtext><mover><mo stretchy=\"true\" minsize=\"3.0em\">→</mo><mpadded width=\"+0.6em\" lspace=\"0.3em\"><mrow><mi>l</mi><mi>i</mi><mi>n</mi><mi>k</mi><mi>i</mi><mi>n</mi><mi>g</mi></mrow></mpadded></mover><mtext>execution code</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{source code} \\xrightarrow{translator} \\text{object code} \\xrightarrow{} \n\\text{instructions} \\xrightarrow{linking} \\text{execution code}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1191em;vertical-align:-0.011em;\"></span><span class=\"mord text\"><span class=\"mord\">source code</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel x-arrow\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1081em;\"><span style=\"top:-3.322em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight x-arrow-pad\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal mtight\">an</span><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">or</span></span></span></span><span class=\"svg-align\" style=\"top:-2.689em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:1.469em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"0.522em\" viewBox=\"0 0 400000 522\" preserveAspectRatio=\"xMaxYMin slice\"><path d=\"M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z\"></path></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.011em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord text\"><span class=\"mord\">object code</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel x-arrow\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.622em;\"><span style=\"top:-3.144em;\"><span class=\"pstrut\" style=\"height:2.522em;\"></span><span class=\"sizing reset-size6 size3 mtight x-arrow-pad\"><span class=\"mord mtight\"></span></span></span><span class=\"svg-align\" style=\"top:-2.511em;\"><span class=\"pstrut\" style=\"height:2.522em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:1.469em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"0.522em\" viewBox=\"0 0 400000 522\" preserveAspectRatio=\"xMaxYMin slice\"><path d=\"M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z\"></path></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.011em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1191em;vertical-align:-0.011em;\"></span><span class=\"mord text\"><span class=\"mord\">instructions</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel x-arrow\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1081em;\"><span style=\"top:-3.322em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight x-arrow-pad\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">inkin</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">g</span></span></span></span><span class=\"svg-align\" style=\"top:-2.689em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:1.469em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"0.522em\" viewBox=\"0 0 400000 522\" preserveAspectRatio=\"xMaxYMin slice\"><path d=\"M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z\"></path></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.011em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord text\"><span class=\"mord\">execution code</span></span></span></span></span></span></div>\n<br>\n<p>이때 고급 언어 (high-level programming language)란 사람이 이해하는 프로그래밍 언어이고,\n저급 언어 (low-level programming language)는 컴퓨터가 직접 이해하고 실행할 수 있는 언어를 의미한다.</p>\n<br>\n<div class=\"math math-display\"><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left right left\" columnspacing=\"0em 1em 0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mrow><mtext mathvariant=\"bold\">high-level</mtext><mtext> </mtext><mtext mathvariant=\"bold\">language</mtext></mrow><mtext>   </mtext><mover><mo stretchy=\"true\" minsize=\"3.0em\">→</mo><mpadded width=\"+0.6em\" lspace=\"0.3em\"><mtext>transform</mtext></mpadded></mover></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mrow><mtext mathvariant=\"bold\">low-level</mtext><mtext> </mtext><mtext mathvariant=\"bold\">language</mtext></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext> - compile language</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>- machine language</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext> - interpreter language</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>- assembly language</mtext></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{aligned}\n&#x26; \\textbf{high-level language} \\ \\ \\ \\xrightarrow{\\text{transform}} &#x26;&#x26; \\textbf{low-level language} \\\\\n&#x26; \\text{ - compile language} &#x26;&#x26; \\text{- machine language} \\\\\n&#x26; \\text{ - interpreter language} &#x26;&#x26; \\text{- assembly language}\\end{aligned}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.7681em;vertical-align:-2.1341em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6341em;\"><span style=\"top:-4.6341em;\"><span class=\"pstrut\" style=\"height:3.1081em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.1341em;\"><span class=\"pstrut\" style=\"height:3.1081em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.6341em;\"><span class=\"pstrut\" style=\"height:3.1081em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1341em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6341em;\"><span style=\"top:-4.6341em;\"><span class=\"pstrut\" style=\"height:3.1081em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord textbf\">high-level language</span></span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel x-arrow\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1081em;\"><span style=\"top:-3.322em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight x-arrow-pad\"><span class=\"mord mtight\"><span class=\"mord text mtight\"><span class=\"mord mtight\">transform</span></span></span></span></span><span class=\"svg-align\" style=\"top:-2.689em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"hide-tail\" style=\"height:0.522em;min-width:1.469em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400em\" height=\"0.522em\" viewBox=\"0 0 400000 522\" preserveAspectRatio=\"xMaxYMin slice\"><path d=\"M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z\"></path></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.011em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3.1341em;\"><span class=\"pstrut\" style=\"height:3.1081em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\"> - compile language</span></span></span></span><span style=\"top:-1.6341em;\"><span class=\"pstrut\" style=\"height:3.1081em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\"> - interpreter language</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1341em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6341em;\"><span style=\"top:-4.6341em;\"><span class=\"pstrut\" style=\"height:3.1081em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.1341em;\"><span class=\"pstrut\" style=\"height:3.1081em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.6341em;\"><span class=\"pstrut\" style=\"height:3.1081em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1341em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6341em;\"><span style=\"top:-4.6341em;\"><span class=\"pstrut\" style=\"height:3.1081em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord textbf\">low-level language</span></span></span></span><span style=\"top:-3.1341em;\"><span class=\"pstrut\" style=\"height:3.1081em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\">- machine language</span></span></span></span><span style=\"top:-1.6341em;\"><span class=\"pstrut\" style=\"height:3.1081em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\">- assembly language</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.1341em;\"><span></span></span></span></span></span></span></span></span></span></span></span></div>\n<br>\n<h3>저급 언어 (low-level programming language)</h3>\n<p>저급 언어는 컴퓨터가 이해하고 실행할 수 있는 언어이며, <strong>명령어</strong>로 이루어져 있다. 저급 언어에는 기계어와 어셈블리 언어가 있다.</p>\n<h4>기계어 (machine code)</h4>\n<p>오직 비트로만 쓰여진 명령어로 구성된 저급 언어이다.</p>\n<h4>어셈블리 언어 (assembly language)</h4>\n<p>기계어는 사람이 읽어 이해하기 힘드므로, 기계어를 읽기 편한 형태로 번역한 언어가 어셈블리 언어이다. 어셈블리어만을 이용해 복잡한 프로그램을 만들기는 쉽지 않지만, 하드웨어와 맞닿아 있는 분야에서는 소스 코드에 어셈블리어를 사용하기도 한다.</p>\n<br>\n<h3>고급 언어 (high-level programming language)</h3>\n<p>고급 언어가 저급 언어로 변환되는 대표적인 방법에는 컴파일 방식과 인터프리트 방식이 있다.</p>\n<h4>컴파일 언어 (compile language)</h4>\n<ul>\n<li>소스 코드 전체를 저급 언어로 변환한 후 실행하는 고급 언어이다.</li>\n<li>이 변환 과정을 컴파일(compile)이라고 하며, 컴파일을 수행하는 도구를 컴파일러(compiler)라고 한다.</li>\n<li>오류가 하나라도 있으면 컴파일에 실패한다. 따라서 디버깅이 다소 어렵다.</li>\n<li>컴파일러를 통해 저급 언어로 변환된 코드를 목적 코드(object code)라고 한다.</li>\n<li>대표적으로 C, C++가 컴파일 언어이다.</li>\n</ul>\n<h4>인터프리터 언어 (interpreter language)</h4>\n<ul>\n<li>소스 코드를 한 줄 단위로 저급 언어로 변환 후 실행하는 고급 언어이다.</li>\n<li>이 변환과 실행을 하는 도구를 인터프리터(interpreter)라고 한다.</li>\n<li>소스 코드에 오류가 나타나기 전까지는 실행되므로 디버깅이 비교적 쉽다.</li>\n<li>대표적으로 Python, Ruby, JavaScript가 인터프리터 언어이다.</li>\n</ul>\n<p>단,</p>\n<ul>\n<li>모든 고급 언어가 컴파일 언어 또는 인터프리터 언어로 명확히 나뉘는 것은 아니다. Python도 컴파일을 하며, Java는 저급 언어가 되는 과정에서 컴파일과 인터프리트를 동시에 수행한다.</li>\n<li>또 컴파일이 가능한 언어라고 해서 인터프리트가 불가능하거나 그 반대인 것도 아니다.</li>\n</ul>\n<br>\n<br>\n<h2>2. 명령어의 구조</h2>\n<p>명령어는 하나의 연산 코드(operation code)와 여러개 또는 0개의 오퍼랜드(operand)로 구성된다. 연산 코드는 연산자, 오퍼랜드는 피연산자로 이해할 수 있다. 명령어는 연산 코드가 담기는 영역인 연산 코드 필드와 오퍼랜드가 담기는 영역인 오퍼랜드 필드로 구성되며, 오퍼랜드에 주소가 담기는 경우가 많기 때문에 주소 필드라고 부르기도 한다.</p>\n<br>\n<h3>연산 코드</h3>\n<p>연산 코드는 명령어가 수행할 연산을 의미한다. 기본적인 연산 코드 유형은 크게 네 가지이다.</p>\n<ol>\n<li>\n<p>데이터 전송\n제어 장치와 레지스터가 CPU 외부의 메모리와 데이터 또는 주소를 주고 받는다.</p>\n<ul>\n<li>MOVE : 데이터를 옮긴다</li>\n<li>STORE : 메모리에 저장한다</li>\n<li>PUSH : 메모리 스택 영역에 데이터를 저장한다</li>\n<li>POP : 메모리 스택 영역의 최상단 데이터를 가져온다</li>\n</ul>\n</li>\n<li>\n<p>산술 / 논리 연산\n다음 연산을 실행하기 위해 ALU로 제어 신호를 전송한다.</p>\n<ul>\n<li>ADD / SUBTRACT / MULTIPLY / DIVIDE : 사칙연산을 수행한다</li>\n<li>INCREMENT / DECREMENT : 오퍼랜드에 1을 더한다 / 뺀다</li>\n<li>AND / OR / NOT : 논리 연산을 수행한다</li>\n<li>COMPARE : 두 개의 숫자나 불 값을 비교한다</li>\n</ul>\n</li>\n<li>\n<p>제어 흐름 변경\n다음 연산 코드들은 명령어 사이클에서 중요한 역할을 담당한다.</p>\n<ul>\n<li>JUMP : 특정 주소로 실행 순서를 옮긴다</li>\n<li>CONDITIONAL JUMP : 조건에 부합할 때 특정 주소로 실행 순서를 옮긴다</li>\n<li>HALT : 프로그램의 실행을 멈춘다</li>\n<li>CALL : 되돌아 올 주소를 스택 영역에 백업하고 특정 주소로 실행 순서를 옮긴다</li>\n<li>RETURN : CALL을 호출할 때 백업한 주소로 실행 순서를 옮긴다</li>\n</ul>\n</li>\n<li>\n<p>입출력 제어\n제어 장치가 시스템 버스를 통해 CPU 외부의 입출력 장치와 데이터 또는 제어 신호를 주고 받는다.</p>\n<ul>\n<li>READ (INPUT) : 입출력 장치로부터 데이터를 읽어들인다</li>\n<li>WRITE (OUTPUT) : 입출력 장치에 데이터를 쓴다</li>\n<li>START IO : 입출력 장치를 시작한다</li>\n<li>TEST IO : 입출력 장치의 상태를 확인한다</li>\n</ul>\n</li>\n</ol>\n<br>\n<h3>오퍼랜드 (Operand)</h3>\n<p>오퍼랜드는 연산에 사용할 데이터나 그 데이터의 위치를 의미한다.</p>\n<pre class=\"grvsc-container abyss\" data-language=\"bash\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">push rbp </span><span class=\"mtk3\"># 1-주소 명령어</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">mov  rbp, rsp </span><span class=\"mtk3\"># 2-주소 명령어</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">mov  edx, DWORD PTR [rbp-4] </span><span class=\"mtk3\"># 2-주소 명령어</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">add  eax, edx </span><span class=\"mtk3\"># 2-주소 명령어</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">ret </span><span class=\"mtk3\"># 0-주소 명령어</span></span></span></code></pre>\n<p>오퍼랜드는 명령어에 하나도 없을 수도, 하나 또는 여러 개가 있을 수도 있다. 위 어셈블리 언어 예시에서 첫번째 명령어에는 오퍼랜드가 하나이고, 두번째 명령어에는 두개이며 마지막 명령어에는 오퍼랜드가 없다. 명령어를 가지고 있는 오퍼랜드 개수 n에 따라서 n-주소 명령어로 나누어 부르기도 한다.</p>\n<br>\n<h3>주소 지정 방식 (addressing mode)</h3>\n<p>명령어의 오퍼랜드 필드에 입력할 데이터의 위치를 지정하는 다양한 방식이다.\n이때 연산하고자 하는 데이터가 저장된 위치를 유효 주소(effective address)하고 한다. 즉 주소 지정 방식은 유효 주소를 찾는 다양한 방식이다.</p>\n<h4>즉시 주소 지정 방식 (immediate addressing mode)</h4>\n<ul>\n<li>오퍼랜드에 필요한 데이터 자체를 지정하는 방식이다.</li>\n<li>CPU에서 메모리에 접근하는 시간이 절약되므로 실행 시간이 빠르다.</li>\n<li>명령어의 용량에 제한이 있기 때문에, 저장할 수 있는 데이터 길이에 한계가 있다.</li>\n</ul>\n<h4>직접 주소 지정 방식 (direct addressing mode)</h4>\n<ul>\n<li>오퍼랜드에 필요한 데이터의 메모리 주소, 즉 유효 주소를 지정하는 방식이다.</li>\n<li>메모리를 참조해야 하므로 즉시 주소 지정 방식보다 느리지만, 데이터 길이의 제한이 메모리 제한 값으로 바뀐다.</li>\n</ul>\n<h4>간접 주소 지정 방식 (indrect addressing mode)</h4>\n<ul>\n<li>오퍼랜드에 유효 주소의 주소를 지정하는 방식이다.</li>\n<li>간접 주소 지정 방식을 사용하면 유효 주소를 찾기위해 메모리를 다시 조회해야하므로, 인출 사이클에서 실행 사이클로 바로 넘어가지 못하고 간접 사이클을 거쳐야 한다.</li>\n</ul>\n<h4>레지스터 주소 지정 방식 (register addressing mode)</h4>\n<ul>\n<li>오퍼랜드에 데이터를 담고있는 레지스터를 지정하는 방식이다.</li>\n<li>직접 주소 지정과 마찬가지로 CPU 내의 접근이므로 실행 시간이 빠르다.</li>\n<li>단, 레지스터에 있는 주소에만 접근할 수 있다.</li>\n</ul>\n<h4>레지스터 간접 주소 지정 방식 (register indirect addressing mode)</h4>\n<ul>\n<li>오퍼랜드에 데이터의 주소를 담고있는 레지스터를 지정하는 방식이다.</li>\n</ul>\n<h4>상대 주소 지정 방식 (relative addressing mode)</h4>\n<ul>\n<li>변위 주소 지정 방식(displacement addressing mode) 중 한가지다. 즉, 오퍼랜드 필드의 값(변위)과</li>\n<li>레지스터의 값을 더해 유효주소를 얻어내는 방식이다. 명령어는 이때 연산 코드 필드, 레지스터 필더, 그리고 오퍼랜드 필드를 갖는다.</li>\n<li>프로그램 카운터의 값과 오퍼랜드의 값를 더하여 인출할 메모리의 주소를 얻는다. 즉 현재 실행 중인 명령어를 인출한 주소를 기준으로 오퍼랜드의 값만큼 이동한 주소를 인출한다.</li>\n</ul>\n<h4>베이스-레지스터 주소 지정 방식 (base-register addressing mode)</h4>\n<ul>\n<li>변위 주소 지정 방식 중 한가지로, 베이스-레지스터를 사용한다.</li>\n<li>베이스-레지스터에 저장된 주소에 오퍼랜드의 값을 더하여 인출할 메모리의 주소를 얻는다. 베이스-레지스터에 기준 주소를, 오퍼랜드에 기준 주소에서 이동하고자하는 거리 값을 저장한다.</li>\n</ul>\n<br>\n<h3>참고자료</h3>\n<ul>\n<li>『혼자 공부하는 컴퓨터 구조 + 운영체제』, 강민철, 한빛미디어</li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .abyss { background-color: #000c18; }\n  .abyss .mtk1 { color: #6688CC; }\n  .abyss .mtk3 { color: #384887; }\n  .abyss .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","frontmatter":{"title":"[컴퓨터 구조] CPU 명령어(Instruction)","date":"August 30, 2022"}}},"pageContext":{"slug":"/CS/OS/2022-08-30-cs-instruction-1/","previous":{"fields":{"slug":"/CS/OS/2022-08-30-cs-data/"},"frontmatter":{"title":"[컴퓨터 구조] 데이터 타입"}},"next":{"fields":{"slug":"/CS/OS/2022-08-30-cs-instruction-2/"},"frontmatter":{"title":"[컴퓨터 구조] CPU 명령어 사이클"}}}},"staticQueryHashes":["1185972000","3231742164"],"slicesMap":{}}