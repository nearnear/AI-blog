{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"59bfe27f-7496-5217-963a-6ba982b1d607","excerpt":"이 글은 ChatGPT Prompt Engineering for Developers강의를 정리한 글입니다. 프롬프트 엔지니어링이란 LLM(거대 언어 모델) 또는 생성 모델에 사용자가 의도하는 결과를 도출하도록 지시사항을 전달하는 작업이다. 프롬프트 엔지니어링은 생성 모델의 결과를 구체화하는 데에 초점이 맞추어져 있다. 따라서 모델에게 프롬프트를 제공하는 것은 아직 모델이 AGI(Artificial General Intelligence)와는 멀다는 것을 의미하며, 앞으로의 모델은 프롬프트를 예측하는 방향으로 나아갈 것이라고 예상된다…","frontmatter":{"title":"ChatGPT 프롬프트 엔지니어링 가이드라인","subtitle":"[DeepLearning.AI, OpenAI] ChatGPT Prompt Engineering for Developers","draft":false,"date":"May 27, 2023"},"fields":{"slug":"/AI/NLP/chatgpt-prompt-engineering/"}}},{"node":{"id":"cc44e270-e5be-551c-a6af-ca421eccf9c0","excerpt":"실시간 뉴스 브리핑 한국어 서비스 기간 : 2023.05 ~ 진행중 주요 기능 : 1분 마다 네이버 뉴스의 분야별 주요 뉴스 스크레이핑 HuggingFace API를 통해 뉴스 기사 요약 사용 도구 : Help of ChatGPT on writing Javascript on Node.js HuggingFace Model API from Hub ainaize/kobart-news Netlify on deployment 프로젝트에 대해 계기 Why AI? ChatGPT의 이슈화로 AI 서비스에 대한 수요와 공급이 증가하고 있는데, 당…","frontmatter":{"title":"[진행중] briefing-now","subtitle":"💡 AI 기사 브리핑 웹 서비스","draft":false,"date":"May 22, 2023"},"fields":{"slug":"/+ Project/briefing-now/"}}},{"node":{"id":"586bf291-782c-50f5-ab2d-ed5dc9ad72fc","excerpt":"gatsby-remark-katex를 설치했다. 먼저, gatsby-remark-katex와 katex를 npm으로 다운받는다. 이제 gatsby-config.js 파일에 플러그인을 추가한다. 마지막으로 /src/templates/blog-post.js에 다음 코드를 추가한다. 이 경로는 Gatsby 폴더 구조에 따라 조금 다를 것이다. Gatsby의 플러그인 설치는 간단한 것이 장점이라고 느꼈다.","frontmatter":{"title":"[플러그인] Gatsby Katex 설치","subtitle":"gatsby-remark-katex","draft":false,"date":"May 21, 2023"},"fields":{"slug":"/Others/About Blog/gatsby-katex-plugin/"}}},{"node":{"id":"f761bca0-31aa-570f-90d2-0336c4cd983c","excerpt":"요약 : javascript string을 두번 디코딩하지 말자. 다음과 같은 warning이 발생하며 디코딩이 작동하지 않는다. 상황은 axios와 iconv로 스크레이핑을 하는 다음 코드에서 발생했다. response 버퍼에 저장된 값을 불러와 EUC-KR로 디코딩을 시도했다. Node.js v18.16.0 원인은 이중 디코딩 로그에서 주어진 링크로 들어가면 deprecation 원인이 설명되어 있다. 이미 저장된 string을 불러와 디코딩하는 경우, 처음 string 저장을 할 때 이미 JavaScript에서 utf-8으로…","frontmatter":{"title":"[iconv] decode()-ing 및 Buffer() deprecation","subtitle":"Iconv-lite warning: decode()-ing strings is deprecated.","draft":false,"date":"May 21, 2023"},"fields":{"slug":"/Others/JavaScript/buffer_deprecation/"}}},{"node":{"id":"571ce718-a855-5b25-80bb-82d132322ff2","excerpt":"0. Functions Functions added Latex 파싱 (gatsby-remark-kartex) 코드 syntax 스타일 (gatsby-remark-vscode) Functions to add Google 등 검색 노출 (SEO) 검색 기능 댓글 (utterances) 현재 위치한 category 표시 메인 화면에 메일 링크 추가 글 박스 만들기 북마크 템플릿 만들기 번역 1. Ground Gatsby-Clean-Blog-Starter 👏🏼 Quick Start More Mardown Header example Lore…","frontmatter":{"title":"[Gatsby] Gatsby 블로그","subtitle":"🏕 Blog","draft":false,"date":"May 21, 2023"},"fields":{"slug":"/Others/About Blog/gatsby-blog/"}}},{"node":{"id":"689d53cf-c365-5302-a7cc-3bd552f49018","excerpt":"원 논문 : Flow-Guided Feature Aggregation for Video Object Detection, 2017 들어가며 시퀀스 데이터에 관심을 가지다 보니, 최근에는 시퀀셜한 이미지인 비디오 데이터(sequence of related frames)에 관심을 가지게 되었다. 물론 프레임 별로 이미지 과제를 수행하면 수행 시간이나 정확도 측면에서 비효율적일 것이라는 생각이 들었다. 그러므로 현재는 어떤 식으로 비디오 처리 과제를 수행하고 있는지 관련 발표 자료를 찾아보게 되었다. 실제로 현실에서 대부분의 사물은 움직…","frontmatter":{"title":"[Paper] FGFA for Video Object Detection, 2017","subtitle":"비디오 개체 인식 모델","draft":false,"date":"November 08, 2022"},"fields":{"slug":"/AI/Vision/fgfa/"}}},{"node":{"id":"4d2fa353-1336-541a-8fac-5e60877fa43b","excerpt":"한국어 토큰화(또는 형태소 분석)를 파이썬 패키지 KoNLPy를 이용하여 수행해보자. 0. 왜 필요한가? 한국어는 토크나이징이 어려운 언어이다. 한국어는 영어와 달리 명사와 조사를 띄어쓰지 않는다. 한국어는 어순이 아니라 조사 또는 조사의 유무에 따라 문법적 기능이 정해진다. 한국어는 띄어쓰기 규칙이 모호하다. 한국어는 주어를 생략할 수 있고, 평서문과 의문문에 문법적 차이가 없다. ex. '집에 갔어.', '집에 갔어?' 따라서 최소의 의미 단위인 형태소를 분석하는 도구(Morphological Analyzer)가 필요하다. 형…","frontmatter":{"title":"[KR] KoNLPy로 한국어 토큰화하기","subtitle":"한국어 처리 통합 패키지 KoNLPy를 알아보자.","draft":false,"date":"September 27, 2022"},"fields":{"slug":"/AI/NLP/konlpy/"}}},{"node":{"id":"360193da-52f3-51f2-81c8-5ed4dca72fc3","excerpt":"1. 배시 쉘 명령어 (Bash shell commands) 디렉토리 .git 내 모든 파일 출력 숨겨진 파일을 포함해 현재 디렉토리에 위치한 모든 파일 출력 파일 file_name.py 생성하기 atom 에디터로 파일 file_name.py 열기 파일 file_name.py 내용 쉘에서 보기 2. 설정 명령어 (Configuration commands) 깃 현재 설정 출력하기 깃의 이름, 이메일 설정 변경하기 깃허브 키를 15분 동안 캐시하기 3. 스테이징 & 커밋 명령어 (Staging & Commit commands) 현재 …","frontmatter":{"title":"깃 치트 시트","subtitle":"🎼 Git Cheat Sheet","draft":false,"date":"August 30, 2022"},"fields":{"slug":"/CS/Git/git-cheat-sheet/"}}},{"node":{"id":"80527815-ad15-5367-8a88-634fe419f566","excerpt":"발단 르포를 작성해 깃허브로 푸시를 하던 도중, 깃허브 프로필에 등장하는 커밋 히스토리가 업데이트 되지 않는다는 것을 발견했다. 날짜에 따라 녹색으로 시각화되어서 \"잔디\"라고 부르는데, 원인을 탐색하다보니 커밋의 저자가 깃허브 계정과 다르게 설정되어 있다는 것을 알았다. 그래서 과거의 커밋들의 저자를 바꾸는 작업을 진행했다. 과정 git config 수정 우선 실행하기 전에, git의 config에서 user.name과 user.email 값이 제대로 설정되어 있는지 확인한다. 만약 config 값에 user.name 또는 use…","frontmatter":{"title":"git rebase로 잔디 회복하기","subtitle":"⛳️","draft":false,"date":"August 30, 2022"},"fields":{"slug":"/CS/Git/git-rebase/"}}},{"node":{"id":"8fb2f062-4dcf-5993-85d8-e1df2a45de97","excerpt":"Paper : Image Style Transfer Using Convolutional Neural Networks 깊은 합성곱 신경망을 이용해 이미지의 내용과 스타일을 분리하고 결합하는 방법을 소개한다. 1. 들어가며 스타일을 이미지에 렌더링하는 것은 이미지의 질감을 바꾸는 것으로 이해할 수 있다. Notation: texture transformation은 질감 변화로, deep image representation은 깊은 이미지 표현식으로, content representation은 내용 표현식으로, style represe…","frontmatter":{"title":"[Paper] Image Style Transfer, 2016","subtitle":"","draft":false,"date":"August 30, 2022"},"fields":{"slug":"/AI/Vision/image-style-transfer/"}}},{"node":{"id":"31565a44-d146-5c32-afd0-6af3e932d837","excerpt":"Paper : Siamese Neural Networks for One-shot Image Recognition 요약 샴 신경망은 입력 데이터 쌍의 유사도를 비교하는 신경망을 학습한 뒤, 분산을 알 수 없는 새로운 샘플을 각 클래스에서 추출한 단 하나의 샘플과 비교해서 분류 작업을 수행한다. 샴 신경망은 이러한 one-shot learning에 획기적인 성과를 도출했다. 목표 : 주어진 데이터를 학습해 재학습 없이 정보가 적은 클래스에 대한 예측력을 높이고 싶다.\n{: .notice} one-shot learning ?\n각 클래스…","frontmatter":{"title":"[Paper] Siamese Neural Network, 2015","subtitle":"다양한 modality에서 활용되는 one-shot 분류 네트워크","draft":false,"date":"August 22, 2022"},"fields":{"slug":"/AI/NLP/siamese-nn/"}}},{"node":{"id":"0db6b306-7fbb-5e1e-abb2-13d941036ef4","excerpt":"Paper: Vaswani et al., 2017, \"Attention is all you need\" (Link to arxiv) 0. Transformer 트랜스포머는 Seq2Seq 모델과 비슷한 인코더-디코더 구조를 갖고 있지만, 보다 긴 시퀀스를 효율적으로 다룰수 있는 모델로 환영받았다. 트랜스포머는 새로운 어텐션을 도입했다. 2014년에 등장한 어텐션(Bahdanau et al., 2014)이 RNN 네트워크의 성능을 향상시키는 활용된 것과 달리, 2017년의 어텐션은 신경망을 이용하지 않고 행렬 곱으로 이루어진 방식을 제…","frontmatter":{"title":"[Paper/Trax] Transformer, 2017","subtitle":"Trax 라이브러리 코드로 Transformer를 이해해보자.","draft":false,"date":"April 14, 2022"},"fields":{"slug":"/AI/NLP/transformer/"}}},{"node":{"id":"48b9d13f-36fb-5de4-b46a-1a9923b8ae90","excerpt":"이 글은 deeplearning.ai의 NLP Specialization를 참고하여 나이브 베이즈 모델을 텍스트 정서 분석에 초점을 맞춰 정리한 글입니다. Github에서 Naive Bayes 코드 보기 0. 모델 개략 나이브 베이즈 모델은 분류 과제를 위한 확률 모델이다. 훈련 데이터에 등장하는 모든 단어의 빈도를 세어서 각 데이터에 대한 조건부 확률의 비율을 계산하므로 분류 과제를 수행하는데 적합하다. 나이브 베이즈 모델은 훈련과 예측을 빠르게 수행할 수 있으므로 baseline 모델로 적합하다. 문장에 있는 각 단어들이 독립…","frontmatter":{"title":"텍스트 나이브 베이즈 분류","subtitle":"DL 이전의 텍스트 처리기인 나이브 베이즈 분류를 알아보자.","draft":false,"date":"April 13, 2022"},"fields":{"slug":"/AI/NLP/naive-bayes/"}}},{"node":{"id":"a78d5036-beb0-5e6f-918c-05187421f263","excerpt":"word2vec은 2013년 구글에서 고안한 자연어 처리 아이디어로, 이에 기반한 모델은 Continuous Bag-of-Words(CBOW)와 Skip-gram 두가지가 있다. 이 글은 그 중에서 CBOW 모델을 원 논문과 deeplearning.ai 수업을 참고하여 정리한 글이다. 원 논문: Mikolov et. al., 2013, Efficient Estimation of Word Representations in Vector Space (arxiv) Mikolov et. al., 2013, Distributed Repres…","frontmatter":{"title":"Word2Vec - CBOW","subtitle":"","draft":false,"date":"March 31, 2022"},"fields":{"slug":"/AI/NLP/word2vec-cbow/"}}}]}},"pageContext":{}},"staticQueryHashes":["1185972000","3004417078","3231742164"],"slicesMap":{}}