{"version":3,"file":"component---src-templates-blog-post-js-0c2edaf5ae9910773e23.js","mappings":"gNAWA,MARoB,IAAkB,IAAjB,QAAEA,GAAS,EAC9B,OACE,uBACEC,UAAU,qBACVC,wBAAyB,CAAEC,OAAQH,IACnC,ECGN,MARmB,IAAe,IAAd,KAAEI,GAAM,EAC1B,OACE,uBAAKH,UAAU,cACb,uBAAKA,UAAU,gBAAgBG,EAAKC,OACpC,uBAAKJ,UAAU,mBAAmBG,EAAKE,MACnC,E,wCCuCV,MAvCuB,IAAiC,IAAhC,KAAEF,EAAI,iBAAEG,GAAkB,EAChD,MAAM,KAAEC,EAAI,SAAEC,GAAaL,EACrBM,GAAWD,aAAQ,EAARA,EAAUE,YAAYN,QAAS,GAC1CO,GAAYJ,aAAI,EAAJA,EAAMG,YAAYN,QAAS,GAEvCQ,EAAeC,IACnB,MAAMC,EAAWR,GACjBS,EAAAA,EAAAA,IAAYF,EAAI,IAAIG,EAAAA,UAAa,CAAEF,aAAW,QAAQ,EAGxD,OACE,uBAAKd,UAAU,kBACb,uBACEiB,QAAS,KACPL,EAAYJ,aAAQ,EAARA,EAAUU,OAAOL,KAAK,GAGnCL,GACC,uBAAKR,UAAU,iBACb,gBAAC,IAAW,MACXS,IAIP,uBACEQ,QAAS,KACPL,EAAYL,aAAI,EAAJA,EAAMW,OAAOL,KAAK,GAG/BN,GACC,uBAAKP,UAAU,iBACZW,EACD,gBAAC,IAAY,QAIf,E,sCC1CV,MAAMQ,EAAc,qBA2BpB,MAzBiB,MACfC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAaC,SAASC,KAAKC,UAAUC,SAAS,QAC9CC,EAASJ,SAASK,cAAc,UACtCD,EAAOE,IAAM,gCACbF,EAAOG,aAAa,OAAQ,+BAC5BH,EAAOG,aAAa,aAAc,YAClCH,EAAOG,aAAa,QAASR,EAAY,WAAY,gBACrDK,EAAOG,aAAa,cAAe,aACnCH,EAAOI,OAAQ,EAEf,MAAMC,EAAWT,SAASU,eAAeb,GAGzC,OAFIY,GAAUA,EAASE,YAAYP,GAE5B,KACL,MAAMK,EAAWT,SAASU,eAAeb,GACrCY,IAAUA,EAASG,UAAY,GAAE,CACtC,GACA,IAGD,uBAAKC,GAAIhB,KC8Bb,MAlCiB,IAA4B,IAA3B,KAAEhB,EAAI,YAAEiC,GAAa,EACrC,MAAM,eAAEC,EAAc,kBAAEC,GAAsBnC,GACxC,YAAEO,EAAW,KAAE6B,GAASF,GACxB,aAAEG,EAAY,iBAAElC,IAAqBmC,EAAAA,EAAAA,MACrC,YAAEC,EAAW,iBAAEC,IAAqBC,EAAAA,EAAAA,GAAc,CACtDC,WAAYP,EAAkBO,WAC9BC,aAAcC,EAAAA,GAAAA,aACdC,SAAUD,EAAAA,GAAAA,WAGZ,OACE,gBAAC,IAAM,CACLJ,iBAAkBA,EAClBH,aAAcA,EACdlC,iBAAkBA,EAClBoC,YAAaA,GAEb,uBAAK1C,UAAU,qBACb,gBAAC,EAAU,CAACG,KAAMO,IAClB,gBAAC,EAAW,CAACX,QAASwC,IACtB,gBAAC,EAAc,CACbpC,KAAMiC,EACN9B,iBAAkBA,IAEpB,2BACA,gBAAC,IAAG,MACJ,gBAAC,EAAQ,OAEJ,C","sources":["webpack://gatsby-clean-blog-starter/./src/components/post-content/index.js","webpack://gatsby-clean-blog-starter/./src/components/post-header/index.js","webpack://gatsby-clean-blog-starter/./src/components/post-navigation/index.js","webpack://gatsby-clean-blog-starter/./src/components/comments/index.js","webpack://gatsby-clean-blog-starter/./src/templates/blog-post.js"],"sourcesContent":["import React from \"react\";\nimport \"./index.scss\";\n\nconst PostContent = ({ content }) => {\n  return (\n    <div\n      className=\"body-1 postContent\"\n      dangerouslySetInnerHTML={{ __html: content }}\n    />\n  );\n};\nexport default PostContent;\n","import React from \"react\";\nimport \"./index.scss\";\n\nconst PostHeader = ({ data }) => {\n  return (\n    <div className=\"postHeader\">\n      <div className=\"h2 postTitle\">{data.title}</div>\n      <div className=\"body-2 postDate\">{data.date}</div>\n    </div>\n  );\n};\nexport default PostHeader;\n","import React from \"react\";\nimport { navigate } from \"gatsby\";\nimport qs from \"query-string\";\n\nimport \"./index.scss\";\nimport { ChevronLeft } from \"../../../assets/icons/chevronLeft\";\nimport { ChevronRight } from \"../../../assets/icons/chevronRight\";\n\nconst PostNavigation = ({ data, selectedCategory }) => {\n  const { next, previous } = data;\n  const preTitle = previous?.frontmatter.title || \"\";\n  const nextTitle = next?.frontmatter.title || \"\";\n\n  const handleClick = (slug) => {\n    const category = selectedCategory;\n    navigate(`${slug}?${qs.stringify({ category })}#blog`);\n  };\n\n  return (\n    <div className=\"postNavigation\">\n      <div\n        onClick={() => {\n          handleClick(previous?.fields.slug);\n        }}\n      >\n        {previous && (\n          <div className=\"postNavButton\">\n            <ChevronLeft />\n            {preTitle}\n          </div>\n        )}\n      </div>\n      <div\n        onClick={() => {\n          handleClick(next?.fields.slug);\n        }}\n      >\n        {next && (\n          <div className=\"postNavButton\">\n            {nextTitle}\n            <ChevronRight />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default PostNavigation;\n","import React, { useEffect } from \"react\";\n\nconst COMMENTS_ID = \"comments-container\";\n\nconst Comments = () => {\n  useEffect(() => {\n    const toggleDark = document.body.classList.contains(\"dark\");\n    const script = document.createElement(\"script\");\n    script.src = \"https://utteranc.es/client.js\";\n    script.setAttribute(\"repo\", \"nearnear/nearnear.github.io\");\n    script.setAttribute(\"issue-term\", \"pathname\");\n    script.setAttribute(\"theme\", toggleDark? \"icy-dark\": \"github-light\");\n    script.setAttribute(\"crossorigin\", \"anonymous\");\n    script.async = true;\n      \n    const comments = document.getElementById(COMMENTS_ID);\n    if (comments) comments.appendChild(script);\n      \n    return () => {\n      const comments = document.getElementById(COMMENTS_ID);\n      if (comments) comments.innerHTML = \"\";\n    };\n  }, []);\n    \n  return (\n    <div id={COMMENTS_ID} />\n  );\n};\n\nexport default Comments;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport PostContent from \"../components/post-content\";\nimport PostHeader from \"../components/post-header\";\nimport PostNavigation from \"../components/post-navigation\";\n\nimport { useCategory } from \"../hooks/useCategory\";\nimport { usePagination } from \"../hooks/usePagination\";\n\nimport { PAGE } from \"../constants\";\nimport { Layout } from \"../layout\";\nimport \"./blog-post.scss\";\n\n// reference katex.min.css\nimport \"katex/dist/katex.min.css\";\n\n// reference utterances\nimport Comments from \"../components/comments\";\n\nconst BlogPost = ({ data, pageContext }) => {\n  const { markdownRemark, allMarkdownRemark } = data;\n  const { frontmatter, html } = markdownRemark;\n  const { handleSelect, selectedCategory } = useCategory();\n  const { currentPage, handlePageChange } = usePagination({\n    totalCount: allMarkdownRemark.totalCount,\n    siblingCount: PAGE.SIBLINGCOUNT,\n    pageSize: PAGE.PAGESIZE,\n  });\n\n  return (\n    <Layout\n      handlePageChange={handlePageChange}\n      handleSelect={handleSelect}\n      selectedCategory={selectedCategory}\n      currentPage={currentPage}\n    >\n      <div className=\"templateContainer\">\n        <PostHeader data={frontmatter} />\n        <PostContent content={html} />\n        <PostNavigation\n          data={pageContext}\n          selectedCategory={selectedCategory}\n        />\n        <hr />\n        <Bio />\n        <Comments />\n      </div>\n    </Layout>\n  );\n};\n\n\n\nexport default BlogPost;\n\nexport const blogQuery = graphql`\n  query BlogQuery($slug: String!) {\n    allMarkdownRemark {\n      totalCount\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`;\n"],"names":["content","className","dangerouslySetInnerHTML","__html","data","title","date","selectedCategory","next","previous","preTitle","frontmatter","nextTitle","handleClick","slug","category","navigate","qs","onClick","fields","COMMENTS_ID","useEffect","toggleDark","document","body","classList","contains","script","createElement","src","setAttribute","async","comments","getElementById","appendChild","innerHTML","id","pageContext","markdownRemark","allMarkdownRemark","html","handleSelect","useCategory","currentPage","handlePageChange","usePagination","totalCount","siblingCount","PAGE","pageSize"],"sourceRoot":""}